Данный класс моделирует виртуальную машину с архитектурой
Фон Неймана. Чтобы получить список команд для управления
машиной, введите "help". Ниже предоставлен список ассемблерных
команд для написания собственных программ на машине:

mov [dest] [src] - копирует значение из [dest] в [src]

add [dest] [src] - прибавляет к [dest] значение [src]

inp [dest] - просит значение на ввод и кладет его в [dest]

out [src] - выводит значение [src]

cx [cnt] - задать значение счетчика для loop

mrk - поставить отметку(все что ниже до loop выполнится cx раз)

loop - зациклить

stop - завершение программы

Все команды принимают на вход имена переменных, перед тем как использовать
переменную необходимо объявить ее следующим образом:

[var_name] = [value]

Все переменные могут иметь только целочисленное значение. Имя переменной
не должно совпадать с именем существующей команды.

Регистры и их назначение:

_mem[0] - указатель на неиспользованный кусок памяти

_mem[1] - счетчик для команды loop (по умолчанию равен 0, вложенные
циклы не поддерживаются)

_mem[2] - указатель на начало loop (по умолчанию равен 0)

_mem[3] - указатель на текущую выполняемую ячейку памяти


Примеры программ на вышеописанном варианте ассемблера:
( чтобы написать пользовательскую программу, надо ввести следующие команды:
> prog [prog_name]
# тут код программы
> run [prog_name]

или записать код в файл и выполнить
> read [file_name]
> run [file_name]

P.S смотри файл test)

1) Умножает введенное число на 5
: in = 0
: cnt = 5
: res = 0
: inp in
: cx in
: mrk
: add res cnt
: loop
: out res
: stop

2) Удваивает введенное пользователем число:
: in = 0
: ax = 0
: inp in
: mov ax in
: add ax in
: out ax
: stop

3) Найти n-ое число Фиббоначи (n > 0):
(F(1) = 1, F(2) = 2, F(3) = 3, F(4) = 5 и т.д.)
: a = 0
: b = 1
: c = 0
: in = 0
: inp in
: cx in
: d = 0
: mrk
: mov d c
: add d a
: add d b
: mov a b
: mov b d
: loop
: out d
: stop